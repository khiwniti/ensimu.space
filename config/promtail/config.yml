# Promtail configuration for ensimu-space log collection

server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Application logs from backend
  - job_name: backend
    static_configs:
      - targets:
          - localhost
        labels:
          job: backend
          service: ensimu-backend
          environment: production
          __path__: /var/log/backend/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            service: service
            trace_id: trace_id
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          service:
          trace_id:

  # Frontend logs
  - job_name: frontend
    static_configs:
      - targets:
          - localhost
        labels:
          job: frontend
          service: ensimu-frontend
          environment: production
          __path__: /var/log/frontend/*.log
    pipeline_stages:
      - regex:
          expression: '(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z) \[(?P<level>\w+)\] (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:

  # Nginx access logs
  - job_name: nginx-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          service: nginx
          log_type: access
          environment: production
          __path__: /var/log/nginx/access.log
    pipeline_stages:
      - regex:
          expression: '(?P<remote_addr>\S+) - (?P<remote_user>\S+) \[(?P<time_local>[^\]]+)\] "(?P<request>[^"]*)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)" "(?P<http_x_forwarded_for>[^"]*)" rt=(?P<request_time>\S+) uct="(?P<upstream_connect_time>[^"]*)" uht="(?P<upstream_header_time>[^"]*)" urt="(?P<upstream_response_time>[^"]*)"'
      - timestamp:
          source: time_local
          format: '02/Jan/2006:15:04:05 -0700'
      - labels:
          status:
          method:
      - match:
          selector: '{status=~"[45].."}'
          action: keep

  # Nginx error logs
  - job_name: nginx-error
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          service: nginx
          log_type: error
          environment: production
          __path__: /var/log/nginx/error.log
    pipeline_stages:
      - regex:
          expression: '(?P<timestamp>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?P<level>\w+)\] (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: '2006/01/02 15:04:05'
      - labels:
          level:

  # PostgreSQL logs
  - job_name: postgres
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgres
          service: postgres
          environment: production
          __path__: /var/log/postgresql/*.log
    pipeline_stages:
      - regex:
          expression: '(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3}) (?P<timezone>\w+) \[(?P<pid>\d+)\] (?P<level>\w+):  (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: '2006-01-02 15:04:05.000'
      - labels:
          level:
          pid:

  # Redis logs
  - job_name: redis
    static_configs:
      - targets:
          - localhost
        labels:
          job: redis
          service: redis
          environment: production
          __path__: /var/log/redis/*.log
    pipeline_stages:
      - regex:
          expression: '(?P<pid>\d+):(?P<role>\w+) (?P<timestamp>\d{2} \w{3} \d{4} \d{2}:\d{2}:\d{2}\.\d{3}) (?P<level>.) (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: '02 Jan 2006 15:04:05.000'
      - labels:
          level:
          role:
          pid:

  # Docker container logs
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
      - source_labels: ['__meta_docker_container_name']
        target_label: 'container'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'stream'
    pipeline_stages:
      - json:
          expressions:
            timestamp: time
            message: log
            stream: stream
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          stream:

  # System logs (syslog)
  - job_name: syslog
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog
          service: system
          environment: production
          __path__: /var/log/syslog
    pipeline_stages:
      - regex:
          expression: '(?P<timestamp>\w{3} \d{1,2} \d{2}:\d{2}:\d{2}) (?P<hostname>\S+) (?P<service>\S+)(\[(?P<pid>\d+)\])?: (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: 'Jan 02 15:04:05'
          action_on_failure: skip
      - labels:
          hostname:
          service:
          pid:

  # Custom application workflow logs
  - job_name: workflows
    static_configs:
      - targets:
          - localhost
        labels:
          job: workflows
          service: ensimu-workflows
          environment: production
          __path__: /var/log/workflows/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: '@timestamp'
            level: level
            message: message
            workflow_id: workflow_id
            user_id: user_id
            execution_id: execution_id
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level:
          workflow_id:
          user_id:
          execution_id:

limits_config:
  readline_rate: 10000
  readline_burst: 10000